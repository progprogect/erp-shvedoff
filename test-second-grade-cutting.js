const axios = require('axios');

const API_BASE = 'http://localhost:5001/api';

async function testSecondGradeCutting() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–µ—Ç–∞ 2-–≥–æ —Å–æ—Ä—Ç–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π —Ä–µ–∑–∫–∏...\n');

    // 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      username: 'director',
      password: '123456'
    });

    if (!loginResponse.data.success) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', loginResponse.data.message);
      return;
    }

    const token = loginResponse.data.token;
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');

    // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é —Ä–µ–∑–∫–∏
    console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∑–∫–∏...');
    const cuttingResponse = await axios.post(`${API_BASE}/cutting`, {
      sourceProductId: 155,
      targetProductId: 155,
      sourceQuantity: 10,
      targetQuantity: 8,
      plannedDate: '2025-09-29T21:00:00.000Z',
      assignedTo: 1
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });

    if (!cuttingResponse.data.success) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∑–∫–∏:', cuttingResponse.data.message);
      return;
    }

    const operationId = cuttingResponse.data.data.id;
    console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —Ä–µ–∑–∫–∏ —Å–æ–∑–¥–∞–Ω–∞, ID:', operationId);

    // 3. –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é —Å —É–∫–∞–∑–∞–Ω–∏–µ–º 2-–≥–æ —Å–æ—Ä—Ç–∞
    console.log('\n3. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º 2-–≥–æ —Å–æ—Ä—Ç–∞...');
    const completeResponse = await axios.put(`${API_BASE}/cutting/${operationId}/complete`, {
      actualTargetQuantity: 6,  // –ì–æ—Ç–æ–≤–æ
      actualSecondGradeQuantity: 2,  // 2 —Å–æ—Ä—Ç
      actualDefectQuantity: 2,  // –ë—Ä–∞–∫
      notes: '–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º 2-–≥–æ —Å–æ—Ä—Ç–∞'
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });

    if (!completeResponse.data.success) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏:', completeResponse.data.message);
      return;
    }

    console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', completeResponse.data.message);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–≤–∞—Ä 2-–≥–æ —Å–æ—Ä—Ç–∞ —Å–æ–∑–¥–∞–ª—Å—è
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ 2-–≥–æ —Å–æ—Ä—Ç–∞...');
    const productsResponse = await axios.get(`${API_BASE}/catalog/products?search=2–°`, {
      headers: { Authorization: `Bearer ${token}` }
    });

    if (productsResponse.data.success) {
      const secondGradeProducts = productsResponse.data.data.filter(p => 
        p.article && p.article.includes('-2–°') && p.grade === 'grade_2'
      );
      
      if (secondGradeProducts.length > 0) {
        console.log('‚úÖ –¢–æ–≤–∞—Ä 2-–≥–æ —Å–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω:', secondGradeProducts[0].article);
        console.log('üìã –î–µ—Ç–∞–ª–∏:', {
          name: secondGradeProducts[0].name,
          article: secondGradeProducts[0].article,
          grade: secondGradeProducts[0].grade
        });
      } else {
        console.log('‚ùå –¢–æ–≤–∞—Ä 2-–≥–æ —Å–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤...');
    const stockResponse = await axios.get(`${API_BASE}/stock`, {
      headers: { Authorization: `Bearer ${token}` }
    });

    if (stockResponse.data.success) {
      const targetStock = stockResponse.data.data.find(s => s.productId === 155);
      if (targetStock) {
        console.log('üì¶ –û—Å—Ç–∞—Ç–æ–∫ —Ü–µ–ª–µ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:', targetStock.currentStock);
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.response?.data || error.message);
  }
}

testSecondGradeCutting();
