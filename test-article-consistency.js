const axios = require('axios');

const API_BASE_URL = 'http://localhost:5001/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
const testProductData = {
  name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏',
  productType: 'carpet',
  categoryId: 1, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID 1
  materialId: 1, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª —Å ID 1
  logoId: 1, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –ª–æ–≥–æ—Ç–∏–ø —Å ID 1
  surfaceIds: [1, 2], // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —Å ID 1, 2
  bottomTypeId: 1, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å —Ç–∏–ø –Ω–∏–∑–∞ —Å ID 1
  pressType: 'ukrainian',
  borderType: 'with_border',
  carpetEdgeType: 'direct_cut',
  carpetEdgeSides: 2,
  carpetEdgeStrength: 'strong',
  grade: 'usual',
  dimensions: {
    length: 2000,
    width: 1500,
    thickness: 10
  }
};

async function testArticleConsistency() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—Ä—Ç–∏–∫—É–ª–æ–≤...\n');

    // 1. –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä –∏ –ø–æ–ª—É—á–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä...');
    const createResponse = await axios.post(`${API_BASE_URL}/catalog/products`, testProductData, {
      headers: {
        'Authorization': 'Bearer YOUR_TOKEN_HERE', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        'Content-Type': 'application/json'
      }
    });

    if (!createResponse.data.success) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ${createResponse.data.error}`);
    }

    const createdProduct = createResponse.data.data;
    const createdArticle = createdProduct.article;
    console.log(`‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º: ${createdArticle}`);

    // 2. –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—Ä—Ç–∏–∫—É–ª –¥–ª—è —Ç–æ–≥–æ –∂–µ —Ç–æ–≤–∞—Ä–∞
    console.log('\n2Ô∏è‚É£ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—Ä—Ç–∏–∫—É–ª...');
    const regenerateResponse = await axios.post(`${API_BASE_URL}/catalog/regenerate/dry-run`, {
      productIds: [createdProduct.id]
    }, {
      headers: {
        'Authorization': 'Bearer YOUR_TOKEN_HERE', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        'Content-Type': 'application/json'
      }
    });

    if (!regenerateResponse.data.success) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${regenerateResponse.data.error}`);
    }

    const regenerateResult = regenerateResponse.data.data.results[0];
    const regeneratedArticle = regenerateResult.newSku;
    console.log(`‚úÖ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª: ${regeneratedArticle}`);

    // 3. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\n3Ô∏è‚É£ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
    console.log(`–°–æ–∑–¥–∞–Ω–∏–µ:    ${createdArticle}`);
    console.log(`–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è: ${regeneratedArticle}`);
    
    if (createdArticle === regeneratedArticle) {
      console.log('‚úÖ –£–°–ü–ï–•: –ê—Ä—Ç–∏–∫—É–ª—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã!');
    } else {
      console.log('‚ùå –û–®–ò–ë–ö–ê: –ê—Ä—Ç–∏–∫—É–ª—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è!');
      console.log('üîç –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–∏–π:');
      
      // –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–∏–π
      const createdParts = createdArticle.split('-');
      const regeneratedParts = regeneratedArticle.split('-');
      
      console.log(`–ß–∞—Å—Ç–µ–π –≤ —Å–æ–∑–¥–∞–Ω–Ω–æ–º: ${createdParts.length}`);
      console.log(`–ß–∞—Å—Ç–µ–π –≤ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º: ${regeneratedParts.length}`);
      
      for (let i = 0; i < Math.max(createdParts.length, regeneratedParts.length); i++) {
        const createdPart = createdParts[i] || '–û–¢–°–£–¢–°–¢–í–£–ï–¢';
        const regeneratedPart = regeneratedParts[i] || '–û–¢–°–£–¢–°–¢–í–£–ï–¢';
        
        if (createdPart !== regeneratedPart) {
          console.log(`  –ß–∞—Å—Ç—å ${i + 1}: "${createdPart}" vs "${regeneratedPart}"`);
        }
      }
    }

    // 4. –û—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä
    console.log('\n4Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞...');
    try {
      await axios.delete(`${API_BASE_URL}/catalog/products/${createdProduct.id}`, {
        headers: {
          'Authorization': 'Bearer YOUR_TOKEN_HERE'
        }
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω');
    } catch (cleanupError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä:', cleanupError.message);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testArticleConsistency();
