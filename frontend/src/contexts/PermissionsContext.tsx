import React, { createContext, useContext, useCallback, useRef, useState, useEffect } from 'react';
import { permissionsApi, MenuPermissions } from '../services/permissionsApi';
import { useAuthStore } from '../stores/authStore';

/**
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
 */
interface PermissionsContextType {
  /**
   * –¢–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  permissions: MenuPermissions | null;
  
  /**
   * –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
   */
  loading: boolean;
  
  /**
   * –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
   */
  error: string | null;
  
  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∏–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
   */
  invalidateAllPermissions: () => void;
  
  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
   */
  registerInvalidationCallback: (callback: () => void) => () => void;
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
   */
  hasPermission: (resource: string, action?: string) => boolean;
}

const PermissionsContext = createContext<PermissionsContextType | null>(null);

export const PermissionsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const { user } = useAuthStore();
  const callbacksRef = useRef<Set<() => void>>(new Set());
  
  // –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  const [permissions, setPermissions] = useState<MenuPermissions | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  
  // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  const isLoadingRef = useRef(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ fallback —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  const getLegacyPermissions = useCallback((role: string): MenuPermissions => {
    const basePermissions = {
      catalog: true, stock: true, orders: true, production: true, cutting: true, shipments: true,
      users: false, permissions: false, audit: false,
      actions: {
        catalog_create: false, catalog_edit: false, catalog_delete: false,
        stock_edit: false, stock_manage: false,
        orders_create: false, orders_edit: false, orders_delete: false,
        production_create: false, production_manage: false,
        cutting_create: false, cutting_execute: false,
        shipments_create: false, shipments_manage: false,
        users_manage: false,
      }
    };

    if (role === 'director') {
      return { 
        ...basePermissions, 
        users: true, 
        permissions: true, 
        audit: true,
        actions: {
          catalog_create: true, catalog_edit: true, catalog_delete: true,
          stock_edit: true, stock_manage: true,
          orders_create: true, orders_edit: true, orders_delete: true,
          production_create: true, production_manage: true,
          cutting_create: true, cutting_execute: true,
          shipments_create: true, shipments_manage: true,
          users_manage: true,
        }
      };
    }
    return basePermissions;
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π (–¢–û–õ–¨–ö–û –û–î–ò–ù –†–ê–ó –ì–õ–û–ë–ê–õ–¨–ù–û)
  const loadPermissions = useCallback(async () => {
    console.log('üåç –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', { user: user?.username, alreadyLoading: isLoadingRef.current });
    
    if (isLoadingRef.current) {
      console.log('‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
      return;
    }
    
    if (!user) {
      setPermissions(null);
      setLoading(false);
      return;
    }

    try {
      isLoadingRef.current = true;
      setLoading(true);
      setError(null);
      
      const userPermissions = await permissionsApi.getMenuPermissions();
      console.log('‚úÖ –ì–õ–û–ë–ê–õ–¨–ù–û –ø–æ–ª—É—á–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', userPermissions);
      console.log('üîç –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', {
        orders: userPermissions.orders,           // ‚Üê –≠–¢–û orders+view
        production: userPermissions.production,   // ‚Üê –≠–¢–û production+view  
        cutting: userPermissions.cutting,         // ‚Üê –≠–¢–û cutting+view
        shipments: userPermissions.shipments,     // ‚Üê –≠–¢–û shipments+view
        actions: {
          orders_create: userPermissions.actions?.orders_create,
          orders_edit: userPermissions.actions?.orders_edit,
          production_create: userPermissions.actions?.production_create,
          cutting_create: userPermissions.actions?.cutting_create,
          shipments_create: userPermissions.actions?.shipments_create
        }
      });
      setPermissions(userPermissions);
    } catch (err) {
      console.error('‚ùå –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –æ—à–∏–±–∫–∞:', err);
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      setPermissions(getLegacyPermissions(user.role));
    } finally {
      setLoading(false);
      isLoadingRef.current = false;
    }
  }, [user, getLegacyPermissions]);
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    console.log('üìã –ì–õ–û–ë–ê–õ–¨–ù–´–ô useEffect –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?.username);
    loadPermissions();
  }, [user?.id]); // –£–±–∏—Ä–∞–µ–º loadPermissions –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤
  
  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  const hasPermission = useCallback((resource: string, action?: string): boolean => {
    console.log('üéØ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø hasPermission:', {
      resource,
      action,
      permissions: permissions ? 'LOADED' : 'NULL',
      permissionsKeys: permissions ? Object.keys(permissions) : 'NO_KEYS'
    });
    
    if (!permissions) {
      console.log('‚ùå –ì–õ–û–ë–ê–õ–¨–ù–û: –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π');
      return false;
    }
    
    const resourceAccess = permissions[resource as keyof MenuPermissions];
    console.log('üîç –ì–õ–û–ë–ê–õ–¨–ù–û –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É:', { resource, resourceAccess });
    
    if (!resourceAccess) {
      console.log('‚ùå –ì–õ–û–ë–ê–õ–¨–ù–û: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Å—É—Ä—Å—É');
      return false;
    }
    
    if (action) {
      // –î–ª—è action='view' –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ (orders, production, etc.)
      if (action === 'view') {
        const viewAccess = typeof resourceAccess === 'boolean' ? resourceAccess : false;
        console.log('üéØ –ì–õ–û–ë–ê–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä–∫–∞ VIEW:', { 
          resource, 
          viewAccess,
          resourceAccessValue: resourceAccess,
          resourceAccessType: typeof resourceAccess
        });
        return viewAccess;
      }
      
      // –î–ª—è –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π (create, edit, delete, etc.) –ø—Ä–æ–≤–µ—Ä—è–µ–º actions
      if (permissions.actions) {
        const actionKey = `${resource}_${action}`;
        const actionAccess = permissions.actions[actionKey as keyof typeof permissions.actions] || false;
        console.log('üéØ –ì–õ–û–ë–ê–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä–∫–∞ –î–ï–ô–°–¢–í–ò–Ø:', { 
          actionKey, 
          actionAccess, 
          actionsKeys: Object.keys(permissions.actions),
          hasThisAction: actionKey in permissions.actions
        });
        return actionAccess;
      }
    }
    
    console.log('‚úÖ –ì–õ–û–ë–ê–õ–¨–ù–û: –ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
    return true;
  }, [permissions]);

  const registerInvalidationCallback = useCallback((callback: () => void) => {
    callbacksRef.current.add(callback);
    return () => { callbacksRef.current.delete(callback); };
  }, []);

  const invalidateAllPermissions = useCallback(() => {
    console.log('üîÑ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π');
    setPermissions(null);
    setError(null);
    isLoadingRef.current = false;
    loadPermissions();
    callbacksRef.current.forEach(callback => {
      try { callback(); } catch (error) { console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', error); }
    });
  }, [loadPermissions]);

  return (
    <PermissionsContext.Provider value={{
      permissions, loading, error, hasPermission,
      invalidateAllPermissions, registerInvalidationCallback
    }}>
      {children}
    </PermissionsContext.Provider>
  );
};

export const usePermissionsContext = () => {
  const context = useContext(PermissionsContext);
  if (!context) {
    throw new Error('usePermissionsContext –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ PermissionsProvider');
  }
  return context;
};

export default PermissionsContext;