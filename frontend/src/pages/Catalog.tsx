import React, { useState } from 'react';
import { Row, Col, Card, Tree, Input, Button, Space, Typography, Tag, Divider, Badge, Select, InputNumber, Collapse } from 'antd';
import {
  SearchOutlined,
  PlusOutlined,
  FilterOutlined,
  AppstoreOutlined,
  InboxOutlined,
  BorderOutlined,
  ColumnWidthOutlined
} from '@ant-design/icons';
import { useAuthStore } from '../stores/authStore';

const { Title, Text } = Typography;
const { Search } = Input;
const { Option } = Select;
const { Panel } = Collapse;

// –ó–∞–≥–ª—É—à–∫–∏ –¥–∞–Ω–Ω—ã—Ö - –≤ –±—É–¥—É—â–µ–º –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–∑ API
const mockCategories = [
  {
    title: 'üìÅ –õ–µ–∂–∞–∫–∏ —Ä–µ–∑–∏–Ω–æ–≤—ã–µ (347)',
    key: 'category-1',
    children: [
      {
        title: 'üìÅ –ß–µ—à—Å–∫–∏–µ (0 –ß–µ—à) (45)',
        key: 'category-1-1',
        children: [
          { title: 'üìÅ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ 1800√ó1200 (12)', key: 'category-1-1-1' },
          { title: 'üìÅ –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (8)', key: 'category-1-1-2' }
        ]
      },
      { title: 'üìÅ 3-–ö–æ—Ä–æ–Ω—á–∞—Ç—ã–µ (3–ö–æ—Ä) (28)', key: 'category-1-2' },
      {
        title: 'üìÅ –ë—Ä–µ–Ω–¥–æ–≤—ã–µ (156)',
        key: 'category-1-3',
        children: [
          { title: 'üìÅ GEA (34)', key: 'category-1-3-1' },
          { title: 'üìÅ Agrotek (28)', key: 'category-1-3-2' },
          { title: 'üìÅ –í–µ—Ä–±–ª—é–¥ (41)', key: 'category-1-3-3' }
        ]
      }
    ]
  },
  {
    title: 'üìÅ –ö–æ–≤—Ä–∏–∫–∏ (89)',
    key: 'category-2',
    children: [
      { title: 'üìÅ –ö–æ–ª—å—Ü–µ–≤—ã–µ (34)', key: 'category-2-1' },
      { title: 'üìÅ –ü—Ä–∏–¥–≤–µ—Ä–Ω—ã–µ (28)', key: 'category-2-2' }
    ]
  },
  {
    title: 'üìÅ –†—É–ª–æ–Ω–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è (45)',
    key: 'category-3'
  },
  {
    title: 'üìÅ –ö—Ä–µ–ø–µ–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è (67)',
    key: 'category-4',
    children: [
      { title: 'üìÅ –î—é–±–µ–ª–∏ (45)', key: 'category-4-1' }
    ]
  }
];

const mockProducts = [
  {
    id: 1,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1800√ó1200√ó30',
    article: 'LCH-1800-1200-30',
    category: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: {
      length: 1800,  // –¥–ª–∏–Ω–∞ –º–º
      width: 1200,   // —à–∏—Ä–∏–Ω–∞ –º–º  
      thickness: 30  // —Ç–æ–ª—â–∏–Ω–∞ –º–º
    },
    currentStock: 145,
    reservedStock: 23,
    normStock: 100,
    price: 15430,
    updated: '25.06.25',
    characteristics: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä, –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ'
  },
  {
    id: 2,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1800√ó1200√ó35',
    article: 'LCH-1800-1200-35',
    category: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: {
      length: 1800,
      width: 1200,
      thickness: 35
    },
    currentStock: 89,
    reservedStock: 12,
    normStock: 50,
    price: 16780,
    updated: '24.06.25',
    characteristics: '–£—Å–∏–ª–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å, –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç–æ–ª—â–∏–Ω–∞'
  },
  {
    id: 3,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1800√ó1200√ó40',
    article: 'LCH-1800-1200-40',
    category: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: {
      length: 1800,
      width: 1200,
      thickness: 40
    },
    currentStock: 67,
    reservedStock: 5,
    normStock: 80,
    price: 18920,
    updated: '23.06.25',
    characteristics: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å'
  },
  {
    id: 4,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1600√ó1000√ó30',
    article: 'LCH-1600-1000-30',
    category: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: {
      length: 1600,
      width: 1000,
      thickness: 30
    },
    currentStock: 34,
    reservedStock: 8,
    normStock: 40,
    price: 12350,
    updated: '25.06.25',
    characteristics: '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è —Å—Ç–æ–π–ª'
  },
  {
    id: 5,
    name: '–ö–æ–≤—Ä–∏–∫ –∫–æ–ª—å—Ü–µ–≤–æ–π 1000√ó1000√ó20',
    article: 'KVR-RING-1000-20',
    category: '–ö–æ–ª—å—Ü–µ–≤—ã–µ',
    dimensions: {
      length: 1000,
      width: 1000,
      thickness: 20
    },
    currentStock: 89,
    reservedStock: 15,
    normStock: 60,
    price: 8450,
    updated: '24.06.25',
    characteristics: '–î—Ä–µ–Ω–∞–∂–Ω—ã–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è, –ø—Ä–æ—Ç–∏–≤–æ—Å–∫–æ–ª—å–∑—è—â–∏–π'
  },
  {
    id: 6,
    name: '–ü–æ–∫—Ä—ã—Ç–∏–µ —Ä—É–ª–æ–Ω–Ω–æ–µ 15000√ó1500√ó12',
    article: 'POK-RUL-15000-12',
    category: '–†—É–ª–æ–Ω–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è',
    dimensions: {
      length: 15000,
      width: 1500,
      thickness: 12
    },
    currentStock: 12,
    reservedStock: 3,
    normStock: 20,
    price: 45670,
    updated: '23.06.25',
    characteristics: '–î–ª—è –ø—Ä–æ—Ö–æ–¥–æ–≤, –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–∏–π'
  }
];

const Catalog: React.FC = () => {
  const [searchText, setSearchText] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string[]>([]);
  const [stockFilter, setStockFilter] = useState<string>('all');
  const [dimensionFilter, setDimensionFilter] = useState({
    lengthMin: null as number | null,
    lengthMax: null as number | null,
    widthMin: null as number | null,
    widthMax: null as number | null,
    thicknessMin: null as number | null,
    thicknessMax: null as number | null,
  });
  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);
  const { user } = useAuthStore();

  const getStockStatus = (current: number, reserved: number, norm: number) => {
    const available = current - reserved;
    if (available <= 0) return { status: 'critical', color: '#ff4d4f', text: '–ó–∞–∫–æ–Ω—á–∏–ª—Å—è' };
    if (available < norm * 0.5) return { status: 'low', color: '#faad14', text: '–ú–∞–ª–æ' };
    return { status: 'normal', color: '#52c41a', text: '–ù–æ—Ä–º–∞' };
  };

  const filteredProducts = mockProducts.filter(product => {
    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∞—Ä—Ç–∏–∫—É–ª—É –∏ —Ä–∞–∑–º–µ—Ä–∞–º
    if (searchText) {
      const searchLower = searchText.toLowerCase();
      const dimensionsString = `${product.dimensions.length}√ó${product.dimensions.width}√ó${product.dimensions.thickness}`;
      const isNameMatch = product.name.toLowerCase().includes(searchLower);
      const isArticleMatch = product.article.toLowerCase().includes(searchLower);
      const isDimensionsMatch = dimensionsString.includes(searchText);
      
      if (!isNameMatch && !isArticleMatch && !isDimensionsMatch) {
        return false;
      }
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º
    if (stockFilter !== 'all') {
      const stockStatus = getStockStatus(product.currentStock, product.reservedStock, product.normStock);
      if (stockFilter !== stockStatus.status) {
        return false;
      }
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
    const { length, width, thickness } = product.dimensions;
    
    if (dimensionFilter.lengthMin && length < dimensionFilter.lengthMin) return false;
    if (dimensionFilter.lengthMax && length > dimensionFilter.lengthMax) return false;
    if (dimensionFilter.widthMin && width < dimensionFilter.widthMin) return false;
    if (dimensionFilter.widthMax && width > dimensionFilter.widthMax) return false;
    if (dimensionFilter.thicknessMin && thickness < dimensionFilter.thicknessMin) return false;
    if (dimensionFilter.thicknessMax && thickness > dimensionFilter.thicknessMax) return false;
    
    return true;
  });
  
  // –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
  const quickSizeFilters = [
    { label: '1800√ó1200', length: 1800, width: 1200 },
    { label: '1600√ó1000', length: 1600, width: 1000 },
    { label: '1000√ó1000', length: 1000, width: 1000 },
  ];
  
  const applyQuickSizeFilter = (length: number, width: number) => {
    setDimensionFilter({
      lengthMin: length,
      lengthMax: length,
      widthMin: width,
      widthMax: width,
      thicknessMin: null,
      thicknessMax: null,
    });
  };
  
  const clearSizeFilters = () => {
    setDimensionFilter({
      lengthMin: null,
      lengthMax: null,
      widthMin: null,
      widthMax: null,
      thicknessMin: null,
      thicknessMax: null,
    });
  };

  const canEdit = user?.role === 'director' || user?.role === 'manager';

  return (
    <div>
      <Row gutter={[0, 24]}>
        {/* Header */}
        <Col span={24}>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
            <div>
              <Title level={2} style={{ margin: 0, display: 'flex', alignItems: 'center' }}>
                <AppstoreOutlined style={{ marginRight: 12 }} />
                –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
              </Title>
              <Text type="secondary">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–æ–π –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
              </Text>
            </div>
            
            {canEdit && (
              <Space>
                <Button icon={<PlusOutlined />}>
                  –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                </Button>
                <Button type="primary" icon={<PlusOutlined />}>
                  –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                </Button>
              </Space>
            )}
          </div>
        </Col>

        {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
        <Col span={24}>
          <Card>
            <Space direction="vertical" style={{ width: '100%' }}>
              {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
              <Row gutter={16} align="middle">
                <Col xs={24} sm={12} md={8}>
                  <Search
                    placeholder="–ü–æ–∏—Å–∫: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞—Ä—Ç–∏–∫—É–ª, —Ä–∞–∑–º–µ—Ä—ã (1800x1200)..."
                    allowClear
                    value={searchText}
                    onChange={(e) => setSearchText(e.target.value)}
                    style={{ width: '100%' }}
                  />
                </Col>
                <Col xs={24} sm={12} md={8}>
                  <Space wrap>
                    <Button 
                      type={stockFilter === 'all' ? 'primary' : 'default'}
                      onClick={() => setStockFilter('all')}
                    >
                      –í—Å–µ
                    </Button>
                    <Button 
                      type={stockFilter === 'normal' ? 'primary' : 'default'}
                      onClick={() => setStockFilter('normal')}
                    >
                      –í –Ω–∞–ª–∏—á–∏–∏
                    </Button>
                    <Button 
                      type={stockFilter === 'low' ? 'primary' : 'default'}
                      onClick={() => setStockFilter('low')}
                    >
                      –ú–∞–ª–æ
                    </Button>
                    <Button 
                      type={stockFilter === 'critical' ? 'primary' : 'default'}
                      onClick={() => setStockFilter('critical')}
                    >
                      –ö—Ä–∏—Ç–∏—á–Ω—ã–µ
                    </Button>
                  </Space>
                </Col>
                <Col xs={24} sm={24} md={8}>
                  <div style={{ textAlign: 'right' }}>
                    <Button
                      icon={<FilterOutlined />}
                      onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}
                    >
                      –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
                    </Button>
                  </div>
                </Col>
              </Row>

              {/* –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º */}
              <Row gutter={16} align="middle">
                <Col>
                  <Text strong>üìè –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º:</Text>
                </Col>
                {quickSizeFilters.map((filter) => (
                  <Col key={filter.label}>
                    <Button
                      size="small"
                      icon={<BorderOutlined />}
                      onClick={() => applyQuickSizeFilter(filter.length, filter.width)}
                      type={
                        dimensionFilter.lengthMin === filter.length && 
                        dimensionFilter.widthMin === filter.width ? 'primary' : 'default'
                      }
                    >
                      {filter.label}
                    </Button>
                  </Col>
                ))}
                <Col>
                  <Button size="small" onClick={clearSizeFilters}>
                    –°–±—Ä–æ—Å–∏—Ç—å
                  </Button>
                </Col>
                <Col flex="auto">
                  <div style={{ textAlign: 'right' }}>
                    <Text type="secondary">
                      –ü–æ–∫–∞–∑–∞–Ω–æ: {filteredProducts.length} –∏–∑ {mockProducts.length} —Ç–æ–≤–∞—Ä–æ–≤
                    </Text>
                  </div>
                </Col>
              </Row>

              {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º */}
              {showAdvancedFilters && (
                <Collapse>
                  <Panel header="üîß –¢–æ—á–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º" key="1">
                    <Row gutter={16}>
                      <Col span={8}>
                        <Text strong>–î–ª–∏–Ω–∞ (–º–º)</Text>
                        <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
                          <InputNumber
                            placeholder="–æ—Ç"
                            value={dimensionFilter.lengthMin}
                            onChange={(value) => setDimensionFilter({
                              ...dimensionFilter, 
                              lengthMin: value
                            })}
                            style={{ width: '50%' }}
                          />
                          <InputNumber
                            placeholder="–¥–æ"
                            value={dimensionFilter.lengthMax}
                            onChange={(value) => setDimensionFilter({
                              ...dimensionFilter, 
                              lengthMax: value
                            })}
                            style={{ width: '50%' }}
                          />
                        </div>
                      </Col>
                      <Col span={8}>
                        <Text strong>–®–∏—Ä–∏–Ω–∞ (–º–º)</Text>
                        <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
                          <InputNumber
                            placeholder="–æ—Ç"
                            value={dimensionFilter.widthMin}
                            onChange={(value) => setDimensionFilter({
                              ...dimensionFilter, 
                              widthMin: value
                            })}
                            style={{ width: '50%' }}
                          />
                          <InputNumber
                            placeholder="–¥–æ"
                            value={dimensionFilter.widthMax}
                            onChange={(value) => setDimensionFilter({
                              ...dimensionFilter, 
                              widthMax: value
                            })}
                            style={{ width: '50%' }}
                          />
                        </div>
                      </Col>
                      <Col span={8}>
                        <Text strong>–¢–æ–ª—â–∏–Ω–∞ (–º–º)</Text>
                        <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
                          <InputNumber
                            placeholder="–æ—Ç"
                            value={dimensionFilter.thicknessMin}
                            onChange={(value) => setDimensionFilter({
                              ...dimensionFilter, 
                              thicknessMin: value
                            })}
                            style={{ width: '50%' }}
                          />
                          <InputNumber
                            placeholder="–¥–æ"
                            value={dimensionFilter.thicknessMax}
                            onChange={(value) => setDimensionFilter({
                              ...dimensionFilter, 
                              thicknessMax: value
                            })}
                            style={{ width: '50%' }}
                          />
                        </div>
                      </Col>
                    </Row>
                  </Panel>
                </Collapse>
              )}
            </Space>
          </Card>
        </Col>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <Col span={24}>
          <Row gutter={16}>
            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
            <Col xs={24} lg={8}>
              <Card title="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏" className="category-tree">
                <Tree
                  showLine
                  defaultExpandedKeys={['category-1', 'category-1-1']}
                  selectedKeys={selectedCategory}
                  onSelect={(selectedKeys) => setSelectedCategory(selectedKeys.map(key => String(key)))}
                  treeData={mockCategories}
                />
              </Card>
            </Col>

            {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
            <Col xs={24} lg={16}>
              <Space direction="vertical" style={{ width: '100%' }}>
                {filteredProducts.map((product) => {
                  const stockStatus = getStockStatus(product.currentStock, product.reservedStock, product.normStock);
                  const available = product.currentStock - product.reservedStock;
                  const { length, width, thickness } = product.dimensions;
                  const area = (length * width) / 1000000; // –ø–ª–æ—â–∞–¥—å –≤ –º¬≤
                  const pricePerM2 = Math.round(product.price / area);
                  
                  return (
                    <Card key={product.id} className="product-card" hoverable>
                      <Row>
                        <Col flex="auto">
                          <div className="product-name">
                            <Text strong style={{ fontSize: '16px' }}>
                              {product.name}
                            </Text>
                            <Tag style={{ marginLeft: 8 }}>
                              {product.article}
                            </Tag>
                          </div>
                          
                          {/* –†–∞–∑–º–µ—Ä—ã - –∫–ª—é—á–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                          <div style={{ margin: '8px 0' }}>
                            <Space>
                              <Tag icon={<ColumnWidthOutlined />} color="blue" style={{ fontSize: '13px' }}>
                                üìê {length}√ó{width}√ó{thickness} –º–º
                              </Tag>
                              <Text type="secondary" style={{ fontSize: '12px' }}>
                                –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category}
                              </Text>
                            </Space>
                          </div>
                          
                          {/* –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                          <Text type="secondary" style={{ fontSize: '12px', fontStyle: 'italic' }}>
                            {product.characteristics}
                          </Text>
                          
                          <div className="product-stock" style={{ marginTop: 12 }}>
                            <Row gutter={16}>
                              <Col span={12}>
                                <Space direction="vertical" size="small">
                                  <div>
                                    <Badge 
                                      color={stockStatus.color} 
                                      text={<Text strong>{product.currentStock} —à—Ç</Text>}
                                    />
                                    <Text type="secondary" style={{ fontSize: '11px', display: 'block' }}>
                                      –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫
                                    </Text>
                                  </div>
                                  
                                  <div>
                                    <Text strong style={{ color: stockStatus.color }}>
                                      üì¶ {available} —à—Ç –¥–æ—Å—Ç—É–ø–Ω–æ
                                    </Text>
                                    {product.reservedStock > 0 && (
                                      <Text type="secondary" style={{ fontSize: '11px', display: 'block' }}>
                                        üîí {product.reservedStock} –≤ —Ä–µ–∑–µ—Ä–≤–µ
                                      </Text>
                                    )}
                                  </div>
                                </Space>
                              </Col>
                              
                              <Col span={12}>
                                <Space direction="vertical" size="small">
                                  <div>
                                    <Text strong style={{ fontSize: '16px', color: '#1890ff' }}>
                                      üí∞ {product.price.toLocaleString()}‚ÇΩ
                                    </Text>
                                    <Text type="secondary" style={{ fontSize: '11px', display: 'block' }}>
                                      –∑–∞ —à—Ç—É–∫—É
                                    </Text>
                                  </div>
                                  
                                  <div>
                                    <Text type="secondary" style={{ fontSize: '11px' }}>
                                      –ü–ª–æ—â–∞–¥—å: {area.toFixed(2)} –º¬≤
                                    </Text>
                                    <br />
                                    <Text type="secondary" style={{ fontSize: '11px' }}>
                                      –¶–µ–Ω–∞ –∑–∞ –º¬≤: {pricePerM2}‚ÇΩ
                                    </Text>
                                  </div>
                                </Space>
                              </Col>
                            </Row>
                          </div>
                        </Col>
                        
                        <Col>
                          <Space direction="vertical" align="end">
                            <Tag color={stockStatus.color} style={{ marginBottom: 8 }}>
                              {stockStatus.text}
                            </Tag>
                            
                            <Space direction="vertical" size="small">
                              <Button size="small" block>üìã –î–µ—Ç–∞–ª–∏</Button>
                              <Button size="small" block>üìà –ì—Ä–∞—Ñ–∏–∫</Button>
                              {(user?.role === 'manager' || user?.role === 'director') && (
                                <Button size="small" type="primary" block>üõí –ó–∞–∫–∞–∑–∞—Ç—å</Button>
                              )}
                            </Space>
                            
                            <Text type="secondary" style={{ fontSize: '10px', marginTop: 8 }}>
                              –û–±–Ω–æ–≤–ª: {product.updated}
                            </Text>
                          </Space>
                        </Col>
                      </Row>
                    </Card>
                  );
                })}
              </Space>

              {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
              <Card style={{ marginTop: 16, textAlign: 'center' }}>
                <Space>
                  <Button>‚óÄÔ∏è –ü—Ä–µ–¥</Button>
                  <Text>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 2</Text>
                  <Button>‚ñ∂Ô∏è –°–ª–µ–¥</Button>
                </Space>
              </Card>
            </Col>
          </Row>
        </Col>

        {/* –°–≤–æ–¥–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <Col span={24}>
          <Card>
            <Title level={5}>üìà –°–≤–æ–¥–∫–∞ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–∞–º</Title>
            <Row gutter={16}>
              <Col span={6}>
                <Text>üíæ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: <Text strong>{filteredProducts.reduce((sum, p) => sum + p.currentStock, 0)} —à—Ç</Text></Text>
              </Col>
              <Col span={6}>
                <Text>üîí –†–µ–∑–µ—Ä–≤: <Text strong>{filteredProducts.reduce((sum, p) => sum + p.reservedStock, 0)} —à—Ç</Text></Text>
              </Col>
              <Col span={6}>
                <Text>üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: <Text strong>{filteredProducts.reduce((sum, p) => sum + (p.price * p.currentStock), 0).toLocaleString()}‚ÇΩ</Text></Text>
              </Col>
              <Col span={6}>
                <Text>üì¶ –î–æ—Å—Ç—É–ø–Ω–æ: <Text strong>{filteredProducts.reduce((sum, p) => sum + (p.currentStock - p.reservedStock), 0)} —à—Ç</Text></Text>
              </Col>
            </Row>
          </Card>
        </Col>
      </Row>
    </div>
  );
};

export default Catalog; 