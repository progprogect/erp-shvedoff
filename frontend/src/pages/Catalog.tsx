import React, { useState, useMemo } from 'react';
import { Row, Col, Card, Tree, Input, Button, Space, Typography, Tag, Badge, Select, InputNumber, Collapse } from 'antd';
import {
  SearchOutlined,
  PlusOutlined,
  AppstoreOutlined,
  InboxOutlined,
  BorderOutlined,
  FilterOutlined,
  ClearOutlined
} from '@ant-design/icons';
import { useAuthStore } from '../stores/authStore';

const { Title, Text } = Typography;
const { Search } = Input;
const { Option } = Select;
const { Panel } = Collapse;

// –ó–∞–≥–ª—É—à–∫–∏ –¥–∞–Ω–Ω—ã—Ö - –≤ –±—É–¥—É—â–µ–º –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–∑ API
const mockCategories = [
  {
    title: 'üìÅ –õ–µ–∂–∞–∫–∏ —Ä–µ–∑–∏–Ω–æ–≤—ã–µ (4)',
    key: 'lejaki',
    children: [
      { title: 'üìÅ –ß–µ—à—Å–∫–∏–µ (4)', key: 'cheshskie' },
      { title: 'üìÅ 3-–ö–æ—Ä–æ–Ω—á–∞—Ç—ã–µ (0)', key: '3koron' },
      { title: 'üìÅ –ë—Ä–µ–Ω–¥–æ–≤—ã–µ (0)', key: 'brendovie' }
    ]
  },
  {
    title: 'üìÅ –ö–æ–≤—Ä–∏–∫–∏ (1)',
    key: 'kovriki',
    children: [
      { title: 'üìÅ –ö–æ–ª—å—Ü–µ–≤—ã–µ (1)', key: 'kolcevie' },
      { title: 'üìÅ –ü—Ä–∏–¥–≤–µ—Ä–Ω—ã–µ (0)', key: 'pridvernie' }
    ]
  },
  {
    title: 'üìÅ –†—É–ª–æ–Ω–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è (1)',
    key: 'rulonnie'
  },
  {
    title: 'üìÅ –ö—Ä–µ–ø–µ–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è (0)',
    key: 'krepej'
  }
];

const mockProducts = [
  {
    id: 1,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1800√ó1200√ó30',
    article: 'LCH-1800-1200-30',
    category: 'cheshskie',
    parentCategory: 'lejaki',
    categoryName: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: { length: 1800, width: 1200, thickness: 30 },
    currentStock: 145,
    reservedStock: 23,
    price: 15430,
    updated: '25.06.25'
  },
  {
    id: 2,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1800√ó1200√ó35',
    article: 'LCH-1800-1200-35',
    category: 'cheshskie',
    parentCategory: 'lejaki',
    categoryName: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: { length: 1800, width: 1200, thickness: 35 },
    currentStock: 89,
    reservedStock: 12,
    price: 16780,
    updated: '24.06.25'
  },
  {
    id: 3,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1800√ó1200√ó40',
    article: 'LCH-1800-1200-40',
    category: 'cheshskie',
    parentCategory: 'lejaki',
    categoryName: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: { length: 1800, width: 1200, thickness: 40 },
    currentStock: 67,
    reservedStock: 5,
    price: 18920,
    updated: '23.06.25'
  },
  {
    id: 4,
    name: '–õ–µ–∂–∞–∫ 0 –ß–µ—à 1600√ó1000√ó30',
    article: 'LCH-1600-1000-30',
    category: 'cheshskie',
    parentCategory: 'lejaki',
    categoryName: '–ß–µ—à—Å–∫–∏–µ',
    dimensions: { length: 1600, width: 1000, thickness: 30 },
    currentStock: 34,
    reservedStock: 8,
    price: 12350,
    updated: '25.06.25'
  },
  {
    id: 5,
    name: '–ö–æ–≤—Ä–∏–∫ –∫–æ–ª—å—Ü–µ–≤–æ–π 1000√ó1000√ó20',
    article: 'KVR-RING-1000-20',
    category: 'kolcevie',
    parentCategory: 'kovriki',
    categoryName: '–ö–æ–ª—å—Ü–µ–≤—ã–µ',
    dimensions: { length: 1000, width: 1000, thickness: 20 },
    currentStock: 89,
    reservedStock: 15,
    price: 8450,
    updated: '24.06.25'
  },
  {
    id: 6,
    name: '–ü–æ–∫—Ä—ã—Ç–∏–µ —Ä—É–ª–æ–Ω–Ω–æ–µ 15000√ó1500√ó12',
    article: 'POK-RUL-15000-12',
    category: 'rulonnie',
    parentCategory: null,
    categoryName: '–†—É–ª–æ–Ω–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è',
    dimensions: { length: 15000, width: 1500, thickness: 12 },
    currentStock: 12,
    reservedStock: 3,
    price: 45670,
    updated: '23.06.25'
  }
];

const Catalog: React.FC = () => {
  const [searchText, setSearchText] = useState('');
  const [checkedCategories, setCheckedCategories] = useState<string[]>([]);
  const [stockFilter, setStockFilter] = useState<string>('all');
  const [currentPage, setCurrentPage] = useState(1);
  const [pageSize] = useState(4); // 4 —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const [showSizeFilters, setShowSizeFilters] = useState(false);
  
  // –§–∏–ª—å—Ç—Ä—ã –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
  const [sizeFilters, setSizeFilters] = useState({
    lengthMin: null as number | null,
    lengthMax: null as number | null,
    widthMin: null as number | null,
    widthMax: null as number | null,
    thicknessMin: null as number | null,
    thicknessMax: null as number | null,
  });

  const { user } = useAuthStore();

  const getStockStatus = (current: number, reserved: number) => {
    const available = current - reserved;
    if (available <= 0) return { status: 'critical', color: '#ff4d4f', text: '–ó–∞–∫–æ–Ω—á–∏–ª—Å—è' };
    if (available < 20) return { status: 'low', color: '#faad14', text: '–ú–∞–ª–æ' };
    return { status: 'normal', color: '#52c41a', text: '–í –Ω–∞–ª–∏—á–∏–∏' };
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const getAllChildCategories = (categoryKey: string): string[] => {
    const category = mockCategories.find(cat => cat.key === categoryKey);
    if (!category) return [categoryKey];
    
    if (category.children) {
      const childKeys = category.children.map(child => child.key);
      return [categoryKey, ...childKeys];
    }
    
    return [categoryKey];
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const handleCategoryCheck = (checkedKeys: any) => {
    let expandedKeys = [...checkedKeys];
    
    // –î–ª—è –∫–∞–∂–¥–æ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ
    checkedKeys.forEach((key: string) => {
      const childKeys = getAllChildCategories(key);
      expandedKeys = [...expandedKeys, ...childKeys];
    });
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    expandedKeys = Array.from(new Set(expandedKeys));
    
    setCheckedCategories(expandedKeys);
    setCurrentPage(1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
  const filteredProducts = useMemo(() => {
    return mockProducts.filter(product => {
      // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∞—Ä—Ç–∏–∫—É–ª—É –∏ —Ä–∞–∑–º–µ—Ä–∞–º
      if (searchText) {
        const searchLower = searchText.toLowerCase();
        const dimensionsString = `${product.dimensions.length}√ó${product.dimensions.width}√ó${product.dimensions.thickness}`;
        const searchMatch = 
          product.name.toLowerCase().includes(searchLower) ||
          product.article.toLowerCase().includes(searchLower) ||
          dimensionsString.includes(searchText) ||
          product.categoryName.toLowerCase().includes(searchLower);
        
        if (!searchMatch) return false;
      }
      
      // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      if (checkedCategories.length > 0) {
        const productCategories = [product.category];
        if (product.parentCategory) {
          productCategories.push(product.parentCategory);
        }
        
        const hasMatchingCategory = productCategories.some(cat => 
          checkedCategories.includes(cat)
        );
        
        if (!hasMatchingCategory) return false;
      }
      
      // –§–∏–ª—å—Ç—Ä –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º
      if (stockFilter !== 'all') {
        const stockStatus = getStockStatus(product.currentStock, product.reservedStock);
        if (stockFilter !== stockStatus.status) return false;
      }
      
      // –§–∏–ª—å—Ç—Ä—ã –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
      const { length, width, thickness } = product.dimensions;
      
      if (sizeFilters.lengthMin && length < sizeFilters.lengthMin) return false;
      if (sizeFilters.lengthMax && length > sizeFilters.lengthMax) return false;
      if (sizeFilters.widthMin && width < sizeFilters.widthMin) return false;
      if (sizeFilters.widthMax && width > sizeFilters.widthMax) return false;
      if (sizeFilters.thicknessMin && thickness < sizeFilters.thicknessMin) return false;
      if (sizeFilters.thicknessMax && thickness > sizeFilters.thicknessMax) return false;
      
      return true;
    });
  }, [searchText, checkedCategories, stockFilter, sizeFilters]);

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  const totalPages = Math.ceil(filteredProducts.length / pageSize);
  const startIndex = (currentPage - 1) * pageSize;
  const paginatedProducts = filteredProducts.slice(startIndex, startIndex + pageSize);

  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const popularSizes = ['1800√ó1200', '1600√ó1000', '1000√ó1000'];
  
  // –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ä–∞–∑–º–µ—Ä–æ–≤
  const quickSizeRanges = [
    { label: '–ë–æ–ª—å—à–∏–µ (>1500–º–º)', lengthMin: 1500, widthMin: 1000 },
    { label: '–°—Ä–µ–¥–Ω–∏–µ (1000-1500–º–º)', lengthMin: 1000, lengthMax: 1500, widthMin: 800, widthMax: 1500 },
    { label: '–ú–∞–ª—ã–µ (<1000–º–º)', lengthMax: 1000, widthMax: 1000 },
  ];

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
  const applyQuickSizeRange = (range: any) => {
    setSizeFilters({
      lengthMin: range.lengthMin || null,
      lengthMax: range.lengthMax || null,
      widthMin: range.widthMin || null,
      widthMax: range.widthMax || null,
      thicknessMin: null,
      thicknessMax: null,
    });
    setCurrentPage(1);
  };

  // –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Ä–∞–∑–º–µ—Ä–æ–≤
  const clearSizeFilters = () => {
    setSizeFilters({
      lengthMin: null,
      lengthMax: null,
      widthMin: null,
      widthMax: null,
      thicknessMin: null,
      thicknessMax: null,
    });
    setCurrentPage(1);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ä–∞–∑–º–µ—Ä–æ–≤
  const hasSizeFilters = Object.values(sizeFilters).some(value => value !== null);

  const canEdit = user?.role === 'director' || user?.role === 'manager';

  return (
    <div>
      <Row gutter={[0, 24]}>
        {/* Header */}
        <Col span={24}>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
            <div>
              <Title level={2} style={{ margin: 0, display: 'flex', alignItems: 'center' }}>
                <AppstoreOutlined style={{ marginRight: 12 }} />
                –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
              </Title>
              <Text type="secondary">
                –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∞—Ä—Ç–∏–∫—É–ª—É, —Ä–∞–∑–º–µ—Ä–∞–º –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
              </Text>
            </div>
            
            {canEdit && (
              <Space>
                <Button icon={<PlusOutlined />}>–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</Button>
                <Button type="primary" icon={<PlusOutlined />}>–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</Button>
              </Space>
            )}
          </div>
        </Col>

        {/* –§–∏–ª—å—Ç—Ä—ã */}
        <Col span={24}>
          <Card>
            <Space direction="vertical" style={{ width: '100%' }}>
              {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
              <Row gutter={[16, 16]} align="middle">
                <Col xs={24} md={8}>
                  <Search
                    placeholder="–ü–æ–∏—Å–∫: –õ–µ–∂–∞–∫, LCH-1800, 1800√ó1200..."
                    allowClear
                    value={searchText}
                    onChange={(e) => setSearchText(e.target.value)}
                    size="large"
                  />
                </Col>
                
                <Col xs={24} md={8}>
                  <Space>
                    <Text>üì¶ –û—Å—Ç–∞—Ç–∫–∏:</Text>
                    <Select value={stockFilter} onChange={setStockFilter} style={{ width: 120 }}>
                      <Option value="all">–í—Å–µ</Option>
                      <Option value="normal">–í –Ω–∞–ª–∏—á–∏–∏</Option>
                      <Option value="low">–ú–∞–ª–æ</Option>
                      <Option value="critical">–ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å</Option>
                    </Select>
                  </Space>
                </Col>
                
                <Col xs={24} md={8}>
                  <div style={{ textAlign: 'right' }}>
                    <Button
                      icon={<FilterOutlined />}
                      type={showSizeFilters ? 'primary' : 'default'}
                      onClick={() => setShowSizeFilters(!showSizeFilters)}
                    >
                      –§–∏–ª—å—Ç—Ä—ã —Ä–∞–∑–º–µ—Ä–æ–≤ {hasSizeFilters ? '(–∞–∫—Ç–∏–≤–Ω—ã)' : ''}
                    </Button>
                  </div>
                </Col>
              </Row>

              {/* –ë—ã—Å—Ç—Ä—ã–µ —Ä–∞–∑–º–µ—Ä—ã */}
              <Row gutter={[8, 8]} align="middle">
                <Col>
                  <Text>üìè –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫:</Text>
                </Col>
                {popularSizes.map(size => (
                  <Col key={size}>
                    <Button
                      size="small"
                      type={searchText === size ? 'primary' : 'default'}
                      onClick={() => setSearchText(searchText === size ? '' : size)}
                    >
                      {size}
                    </Button>
                  </Col>
                ))}
                <Col>
                  <Text style={{ marginLeft: 16 }}>üîß –ü–æ —Ä–∞–∑–º–µ—Ä—É:</Text>
                </Col>
                {quickSizeRanges.map((range, index) => (
                  <Col key={index}>
                    <Button
                      size="small"
                      onClick={() => applyQuickSizeRange(range)}
                    >
                      {range.label}
                    </Button>
                  </Col>
                ))}
                {hasSizeFilters && (
                  <Col>
                    <Button size="small" icon={<ClearOutlined />} onClick={clearSizeFilters}>
                      –°–±—Ä–æ—Å–∏—Ç—å
                    </Button>
                  </Col>
                )}
              </Row>

              {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ä–∞–∑–º–µ—Ä–æ–≤ */}
              {showSizeFilters && (
                <Collapse>
                  <Panel header="üéØ –¢–æ—á–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ä–∞–∑–º–µ—Ä–æ–≤" key="1">
                    <Row gutter={16}>
                      <Col span={8}>
                        <Text strong>–î–ª–∏–Ω–∞ (–º–º)</Text>
                        <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
                          <InputNumber
                            placeholder="–æ—Ç"
                            value={sizeFilters.lengthMin}
                            onChange={(value) => setSizeFilters({...sizeFilters, lengthMin: value})}
                            style={{ width: '50%' }}
                            min={0}
                          />
                          <InputNumber
                            placeholder="–¥–æ"
                            value={sizeFilters.lengthMax}
                            onChange={(value) => setSizeFilters({...sizeFilters, lengthMax: value})}
                            style={{ width: '50%' }}
                            min={0}
                          />
                        </div>
                      </Col>
                      <Col span={8}>
                        <Text strong>–®–∏—Ä–∏–Ω–∞ (–º–º)</Text>
                        <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
                          <InputNumber
                            placeholder="–æ—Ç"
                            value={sizeFilters.widthMin}
                            onChange={(value) => setSizeFilters({...sizeFilters, widthMin: value})}
                            style={{ width: '50%' }}
                            min={0}
                          />
                          <InputNumber
                            placeholder="–¥–æ"
                            value={sizeFilters.widthMax}
                            onChange={(value) => setSizeFilters({...sizeFilters, widthMax: value})}
                            style={{ width: '50%' }}
                            min={0}
                          />
                        </div>
                      </Col>
                      <Col span={8}>
                        <Text strong>–¢–æ–ª—â–∏–Ω–∞ (–º–º)</Text>
                        <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
                          <InputNumber
                            placeholder="–æ—Ç"
                            value={sizeFilters.thicknessMin}
                            onChange={(value) => setSizeFilters({...sizeFilters, thicknessMin: value})}
                            style={{ width: '50%' }}
                            min={0}
                          />
                          <InputNumber
                            placeholder="–¥–æ"
                            value={sizeFilters.thicknessMax}
                            onChange={(value) => setSizeFilters({...sizeFilters, thicknessMax: value})}
                            style={{ width: '50%' }}
                            min={0}
                          />
                        </div>
                      </Col>
                    </Row>
                  </Panel>
                </Collapse>
              )}

              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
              <Row>
                <Col span={24}>
                  <div style={{ textAlign: 'center', padding: '8px 0' }}>
                    <Text type="secondary">
                      üìä –ù–∞–π–¥–µ–Ω–æ: <Text strong>{filteredProducts.length}</Text> —Ç–æ–≤–∞—Ä–æ–≤
                      {checkedCategories.length > 0 && (
                        <Text type="secondary"> –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö</Text>
                      )}
                      {hasSizeFilters && (
                        <Text type="secondary"> —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ —Ä–∞–∑–º–µ—Ä–æ–≤</Text>
                      )}
                    </Text>
                  </div>
                </Col>
              </Row>
            </Space>
          </Card>
        </Col>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <Col span={24}>
          <Row gutter={16}>
            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º */}
            <Col xs={24} lg={6}>
              <Card title="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏" size="small">
                <Tree
                  checkable
                  showLine
                  defaultExpandedKeys={['lejaki', 'kovriki']}
                  checkedKeys={checkedCategories}
                  onCheck={handleCategoryCheck}
                  treeData={mockCategories}
                />
                {checkedCategories.length > 0 && (
                  <div style={{ marginTop: 12, padding: '8px', backgroundColor: '#f0f0f0', borderRadius: '4px' }}>
                    <Text type="secondary" style={{ fontSize: '12px' }}>
                      –í—ã–±—Ä–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {checkedCategories.length}
                    </Text>
                    <br />
                    <Button 
                      size="small" 
                      style={{ marginTop: 4 }}
                      onClick={() => setCheckedCategories([])}
                    >
                      –°–±—Ä–æ—Å–∏—Ç—å –≤—ã–±–æ—Ä
                    </Button>
                  </div>
                )}
              </Card>
            </Col>

            {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
            <Col xs={24} lg={18}>
              <Row gutter={[16, 16]}>
                {paginatedProducts.map((product) => {
                  const stockStatus = getStockStatus(product.currentStock, product.reservedStock);
                  const available = product.currentStock - product.reservedStock;
                  const { length, width, thickness } = product.dimensions;
                  
                  return (
                    <Col xs={24} xl={12} key={product.id}>
                      <Card hoverable size="small">
                        <div style={{ marginBottom: 12 }}>
                          <Text strong style={{ fontSize: '16px' }}>
                            {product.name}
                          </Text>
                          <br />
                          <Tag style={{ marginTop: 4 }}>{product.article}</Tag>
                          <Tag color="blue">{length}√ó{width}√ó{thickness} –º–º</Tag>
                        </div>
                        
                        <Row gutter={16}>
                          <Col span={12}>
                            <Space direction="vertical" size="small">
                              <div>
                                <Badge color={stockStatus.color} />
                                <Text strong>{available} —à—Ç</Text>
                                <Text type="secondary" style={{ fontSize: '12px', display: 'block' }}>
                                  –¥–æ—Å—Ç—É–ø–Ω–æ
                                </Text>
                              </div>
                              <Text type="secondary" style={{ fontSize: '12px' }}>
                                {product.categoryName}
                              </Text>
                            </Space>
                          </Col>
                          
                          <Col span={12}>
                            <Space direction="vertical" size="small" style={{ width: '100%' }}>
                              <div style={{ textAlign: 'right' }}>
                                <Text strong style={{ fontSize: '16px', color: '#1890ff' }}>
                                  {product.price.toLocaleString()}‚ÇΩ
                                </Text>
                                <Text type="secondary" style={{ fontSize: '12px', display: 'block' }}>
                                  –∑–∞ —à—Ç—É–∫—É
                                </Text>
                              </div>
                              
                              <Space size="small">
                                <Button size="small">–î–µ—Ç–∞–ª–∏</Button>
                                {(user?.role === 'manager' || user?.role === 'director') && (
                                  <Button size="small" type="primary">–ó–∞–∫–∞–∑–∞—Ç—å</Button>
                                )}
                              </Space>
                            </Space>
                          </Col>
                        </Row>
                      </Card>
                    </Col>
                  );
                })}
              </Row>

              {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
              {totalPages > 1 && (
                <Card style={{ marginTop: 16, textAlign: 'center' }} size="small">
                  <Space>
                    <Button 
                      disabled={currentPage === 1}
                      onClick={() => setCurrentPage(currentPage - 1)}
                    >
                      ‚Üê –ü—Ä–µ–¥
                    </Button>
                    
                    <Text>–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentPage} –∏–∑ {totalPages}</Text>
                    
                    <Button 
                      disabled={currentPage === totalPages}
                      onClick={() => setCurrentPage(currentPage + 1)}
                    >
                      –°–ª–µ–¥ ‚Üí
                    </Button>
                  </Space>
                </Card>
              )}

              {paginatedProducts.length === 0 && (
                <Card style={{ textAlign: 'center', marginTop: 16 }}>
                  <Text type="secondary">
                    <InboxOutlined style={{ fontSize: 48, marginBottom: 16, display: 'block' }} />
                    –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                  </Text>
                  <Button onClick={() => {
                    setSearchText('');
                    setCheckedCategories([]);
                    setStockFilter('all');
                    setSizeFilters({
                      lengthMin: null, lengthMax: null,
                      widthMin: null, widthMax: null,
                      thicknessMin: null, thicknessMax: null,
                    });
                    setCurrentPage(1);
                  }}>
                    –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
                  </Button>
                </Card>
              )}
            </Col>
          </Row>
        </Col>

        {/* –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Å–≤–æ–¥–∫–∞ */}
        {filteredProducts.length > 0 && (
          <Col span={24}>
            <Card size="small">
              <Row gutter={16}>
                <Col span={6}>
                  <Text>üíæ –û—Å—Ç–∞—Ç–æ–∫: <Text strong>{filteredProducts.reduce((sum, p) => sum + p.currentStock, 0)}</Text></Text>
                </Col>
                <Col span={6}>
                  <Text>üì¶ –î–æ—Å—Ç—É–ø–Ω–æ: <Text strong>{filteredProducts.reduce((sum, p) => sum + (p.currentStock - p.reservedStock), 0)}</Text></Text>
                </Col>
                <Col span={6}>
                  <Text>üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: <Text strong>{(filteredProducts.reduce((sum, p) => sum + (p.price * p.currentStock), 0) / 1000).toFixed(0)}–∫‚ÇΩ</Text></Text>
                </Col>
                <Col span={6}>
                  <Text>üìä –ü–æ–∑–∏—Ü–∏–π: <Text strong>{filteredProducts.length}</Text></Text>
                </Col>
              </Row>
            </Card>
          </Col>
        )}
      </Row>
    </div>
  );
};

export default Catalog; 