import React, { useState } from 'react';
import { Modal, Form, Input, Select, InputNumber, Row, Col, Button, Space, message } from 'antd';
import { PlusOutlined } from '@ant-design/icons';
import { catalogApi, Category } from '../services/catalogApi';
import { useAuthStore } from '../stores/authStore';

const { Option } = Select;
const { TextArea } = Input;

interface CreateProductModalProps {
  visible: boolean;
  categories: Category[];
  onClose: () => void;
  onSuccess: () => void;
}

const CreateProductModal: React.FC<CreateProductModalProps> = ({
  visible,
  categories,
  onClose,
  onSuccess
}) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const { token } = useAuthStore();

  const handleSubmit = async (values: any) => {
    if (!token) return;

    setLoading(true);
    try {
      const productData = {
        name: values.name,
        article: values.article || null,
        categoryId: values.categoryId,
        dimensions: values.length && values.width && values.thickness ? {
          length: Number(values.length),
          width: Number(values.width),
          thickness: Number(values.thickness)
        } : undefined,
        characteristics: {
          surface: values.surface || null,
          material: values.material || null
        },
        price: values.price ? parseFloat(values.price) : undefined,
        normStock: values.normStock || 0,
        notes: values.notes || null
      };

      const response = await catalogApi.createProduct(productData, token);
      
      if (response.success) {
        message.success('–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
        form.resetFields();
        onSuccess();
        onClose();
      } else {
        message.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error);
      message.error('–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—Ä—Ç–∏–∫—É–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è
  const generateArticle = () => {
    const name = form.getFieldValue('name');
    if (name) {
      const length = form.getFieldValue('length');
      const width = form.getFieldValue('width');
      const thickness = form.getFieldValue('thickness');
      
      let article = name
        .replace(/[^–∞-—è—ë\s]/gi, '')
        .split(' ')
        .map((word: string) => word.slice(0, 3).toUpperCase())
        .join('-');
      
      if (length && width && thickness) {
        article += `-${length}-${width}-${thickness}`;
      }
      
      form.setFieldsValue({ article });
    }
  };

  const flatCategories = (categories: Category[]): Category[] => {
    let result: Category[] = [];
    categories.forEach(category => {
      result.push(category);
      if (category.children) {
        result = result.concat(flatCategories(category.children));
      }
    });
    return result;
  };

  return (
    <Modal
      title={
        <div>
          <PlusOutlined style={{ color: '#1890ff', marginRight: 8 }} />
          –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
        </div>
      }
      open={visible}
      onCancel={onClose}
      footer={null}
      width={800}
      destroyOnHidden
    >
      <Form
        form={form}
        layout="vertical"
        onFinish={handleSubmit}
      >
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Row gutter={16}>
          <Col span={12}>
            <Form.Item
              name="name"
              label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
              rules={[
                { required: true, message: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞' },
                { min: 2, message: '–ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞' }
              ]}
            >
              <Input 
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –õ–µ–∂–∞–∫ —Ä–µ–∑–∏–Ω–æ–≤—ã–π —á–µ—à—Å–∫–∏–π"
                onChange={generateArticle}
              />
            </Form.Item>
          </Col>
          <Col span={12}>
            <Form.Item
              name="article"
              label="–ê—Ä—Ç–∏–∫—É–ª"
            >
              <Input 
                placeholder="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é"
                addonAfter={
                  <Button 
                    type="link" 
                    size="small"
                    onClick={generateArticle}
                    style={{ padding: '0 4px' }}
                  >
                    üé≤
                  </Button>
                }
              />
            </Form.Item>
          </Col>
        </Row>

        <Row gutter={16}>
          <Col span={24}>
            <Form.Item
              name="categoryId"
              label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
              rules={[{ required: true, message: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é' }]}
            >
              <Select 
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞"
                showSearch
                optionFilterProp="children"
              >
                {flatCategories(categories).map(category => (
                  <Option key={category.id} value={category.id}>
                    üìÅ {category.name}
                  </Option>
                ))}
              </Select>
            </Form.Item>
          </Col>
        </Row>

        {/* –†–∞–∑–º–µ—Ä—ã */}
        <Row gutter={16}>
          <Col span={8}>
            <Form.Item
              name="length"
              label="–î–ª–∏–Ω–∞ (–º–º)"
            >
              <InputNumber 
                placeholder="1800"
                style={{ width: '100%' }}
                min={1}
                onChange={generateArticle}
              />
            </Form.Item>
          </Col>
          <Col span={8}>
            <Form.Item
              name="width"
              label="–®–∏—Ä–∏–Ω–∞ (–º–º)"
            >
              <InputNumber 
                placeholder="1200"
                style={{ width: '100%' }}
                min={1}
                onChange={generateArticle}
              />
            </Form.Item>
          </Col>
          <Col span={8}>
            <Form.Item
              name="thickness"
              label="–¢–æ–ª—â–∏–Ω–∞ (–º–º)"
            >
              <InputNumber 
                placeholder="30"
                style={{ width: '100%' }}
                min={1}
                onChange={generateArticle}
              />
            </Form.Item>
          </Col>
        </Row>

        {/* –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
        <Row gutter={16}>
          <Col span={12}>
            <Form.Item
              name="surface"
              label="–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å"
            >
              <Select 
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏"
                allowClear
              >
                <Option value="—á–µ—Ä—Ç—ë–Ω–∞—è">–ß–µ—Ä—Ç—ë–Ω–∞—è</Option>
                <Option value="–≥–ª–∞–¥–∫–∞—è">–ì–ª–∞–¥–∫–∞—è</Option>
                <Option value="—Ä–∏—Ñ–ª—ë–Ω–∞—è">–†–∏—Ñ–ª—ë–Ω–∞—è</Option>
                <Option value="—Ç–µ–∫—Å—Ç—É—Ä–Ω–∞—è">–¢–µ–∫—Å—Ç—É—Ä–Ω–∞—è</Option>
              </Select>
            </Form.Item>
          </Col>
          <Col span={12}>
            <Form.Item
              name="material"
              label="–ú–∞—Ç–µ—Ä–∏–∞–ª"
            >
              <Select 
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª"
                allowClear
              >
                <Option value="—Ä–µ–∑–∏–Ω–∞">–†–µ–∑–∏–Ω–∞</Option>
                <Option value="—Ä–µ–∑–∏–Ω–∞ + —Ç–∫–∞–Ω—å">–†–µ–∑–∏–Ω–∞ + —Ç–∫–∞–Ω—å</Option>
                <Option value="–∫–∞—É—á—É–∫">–ö–∞—É—á—É–∫</Option>
                <Option value="–ø–æ–ª–∏—É—Ä–µ—Ç–∞–Ω">–ü–æ–ª–∏—É—Ä–µ—Ç–∞–Ω</Option>
              </Select>
            </Form.Item>
          </Col>
        </Row>

        {/* –¶–µ–Ω—ã –∏ –Ω–æ—Ä–º—ã */}
        <Row gutter={16}>
          <Col span={8}>
            <Form.Item
              name="price"
              label="–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ (‚ÇΩ)"
            >
              <InputNumber 
                placeholder="15000"
                style={{ width: '100%' }}
                min={0}
                precision={2}
              />
            </Form.Item>
          </Col>
          <Col span={8}>
            <Form.Item
              name="normStock"
              label="–ù–æ—Ä–º–∞ –æ—Å—Ç–∞—Ç–∫–∞ (—à—Ç)"
            >
              <InputNumber 
                placeholder="10"
                style={{ width: '100%' }}
                min={0}
              />
            </Form.Item>
          </Col>
        </Row>

        {/* –ü—Ä–∏–º–µ—á–∞–Ω–∏—è */}
        <Row>
          <Col span={24}>
            <Form.Item
              name="notes"
              label="–ü—Ä–∏–º–µ—á–∞–Ω–∏—è"
            >
              <TextArea 
                rows={3}
                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ..."
                maxLength={500}
                showCount
              />
            </Form.Item>
          </Col>
        </Row>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <Form.Item style={{ marginBottom: 0, textAlign: 'right' }}>
          <Space>
            <Button onClick={onClose}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button
              type="primary"
              htmlType="submit"
              loading={loading}
              icon={<PlusOutlined />}
            >
              –°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä
            </Button>
          </Space>
        </Form.Item>
      </Form>
    </Modal>
  );
};

export default CreateProductModal; 