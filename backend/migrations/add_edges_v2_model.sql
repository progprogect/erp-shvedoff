-- –ú–∏–≥—Ä–∞—Ü–∏—è: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫—Ä–∞—ë–≤ –∏ –±–æ—Ä—Ç–æ–≤ (edges_v2)
-- –î–∞—Ç–∞: 2025-08-18
-- –¶–µ–ª—å: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤, –Ω–∏–∂–Ω–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∏ –∫—Ä–∞—ë–≤ —Ç–æ–≤–∞—Ä–∞
-- –§–∏—á–∞-—Ñ–ª–∞–≥: edges_v2

BEGIN;

-- ===== 1. –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–´–• –ü–û–õ–ï–ô –í –¢–ê–ë–õ–ò–¶–£ PRODUCTS =====

-- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ height_mm (–∑–∞–º–µ–Ω—è–µ—Ç thickness)
ALTER TABLE products ADD COLUMN IF NOT EXISTS height_mm INTEGER;

-- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è —Ç–∏–ø–∞ –Ω–∏–∂–Ω–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
ALTER TABLE products ADD COLUMN IF NOT EXISTS bottom_type_id INTEGER;

-- ===== 2. –°–û–ó–î–ê–ù–ò–ï –°–ü–†–ê–í–û–ß–ù–ò–ö–ê –¢–ò–ü–û–í –ù–ò–ñ–ù–ï–ô –ü–û–í–ï–†–•–ù–û–°–¢–ò =====

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–∏–ø–æ–≤ –Ω–∏–∂–Ω–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
CREATE TABLE IF NOT EXISTS bottom_types (
    id SERIAL PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE, -- 'ship_0', 'ship_2', 'ship_5', 'ship_7', 'ship_11'
    name VARCHAR(100) NOT NULL,
    description TEXT,
    preview_svg TEXT, -- SVG –∏–∫–æ–Ω–∫–∞ –¥–ª—è UI (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    is_system BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT NOW()
);

-- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–∞–±–ª–∏—Ü–µ
COMMENT ON TABLE bottom_types IS '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–∏–ø–æ–≤ –Ω–∏–∂–Ω–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤ (–º–∏–ª–ª–∏–º–µ—Ç—Ä—ã —à–∏–ø–æ–≤)';

-- –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
INSERT INTO bottom_types (code, name, description, is_system, created_at) VALUES
('ship_0', '–®–∏–ø 0–º–º', '–ë–µ–∑ —à–∏–ø–æ–≤ (–≥–ª–∞–¥–∫–∞—è –Ω–∏–∂–Ω—è—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å)', true, NOW()),
('ship_2', '–®–∏–ø 2–º–º', '–®–∏–ø—ã –≤—ã—Å–æ—Ç–æ–π 2 –º–∏–ª–ª–∏–º–µ—Ç—Ä–∞', true, NOW()),
('ship_5', '–®–∏–ø 5–º–º', '–®–∏–ø—ã –≤—ã—Å–æ—Ç–æ–π 5 –º–∏–ª–ª–∏–º–µ—Ç—Ä–æ–≤', true, NOW()),
('ship_7', '–®–∏–ø 7–º–º', '–®–∏–ø—ã –≤—ã—Å–æ—Ç–æ–π 7 –º–∏–ª–ª–∏–º–µ—Ç—Ä–æ–≤', true, NOW()),
('ship_11', '–®–∏–ø 11–º–º', '–®–∏–ø—ã –≤—ã—Å–æ—Ç–æ–π 11 –º–∏–ª–ª–∏–º–µ—Ç—Ä–æ–≤', true, NOW())
ON CONFLICT (code) DO NOTHING;

-- ===== 3. –°–û–ó–î–ê–ù–ò–ï –¢–ò–ü–û–í –î–õ–Ø –ö–†–ê–Å–í =====

-- –°–æ–∑–¥–∞–µ–º ENUM –¥–ª—è —Ç–∏–ø–æ–≤ –∫—Ä–∞—ë–≤
CREATE TYPE IF NOT EXISTS edge_type AS ENUM ('puzzle', 'straight', 'plain');

-- –°–æ–∑–¥–∞–µ–º ENUM –¥–ª—è —Å—Ç–æ—Ä–æ–Ω –∫—Ä–∞—ë–≤
CREATE TYPE IF NOT EXISTS edge_side AS ENUM ('top', 'bottom', 'left', 'right');

-- ===== 4. –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ –ö–†–ê–Å–í –¢–û–í–ê–†–ê =====

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫—Ä–∞—ë–≤ —Ç–æ–≤–∞—Ä–∞
CREATE TABLE IF NOT EXISTS product_edges (
    id SERIAL PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products(id) ON DELETE CASCADE,
    side edge_side NOT NULL,
    edge_type edge_type NOT NULL,
    puzzle_type_id INTEGER REFERENCES puzzle_types(id), -- —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ edge_type = 'puzzle'
    reinforced BOOLEAN DEFAULT false, -- —É—Å–∏–ª–µ–Ω–Ω—ã–π / –Ω–µ —É—Å–∏–ª–µ–Ω–Ω—ã–π
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ–¥–∏–Ω –∫—Ä–∞–π –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—É —Ç–æ–≤–∞—Ä–∞
    UNIQUE(product_id, side)
);

-- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Ç–∞–±–ª–∏—Ü–µ
COMMENT ON TABLE product_edges IS '–ö—Ä–∞—è —Ç–æ–≤–∞—Ä–∞ –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç–æ—Ä–æ–Ω–µ —Å —Ç–∏–ø–æ–º –∏ –æ–ø—Ü–∏—è–º–∏';
COMMENT ON COLUMN product_edges.side IS '–°—Ç–æ—Ä–æ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: top, bottom, left, right';
COMMENT ON COLUMN product_edges.edge_type IS '–¢–∏–ø –∫—Ä–∞—è: puzzle (–ø–∞–∑–∑–ª), straight (–ø—Ä—è–º–æ–π), plain (–æ–±—ã—á–Ω—ã–π)';
COMMENT ON COLUMN product_edges.puzzle_type_id IS 'ID —Ç–∏–ø–∞ –ø–∞–∑–∑–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è edge_type = puzzle)';
COMMENT ON COLUMN product_edges.reinforced IS '–£—Å–∏–ª–µ–Ω–Ω—ã–π –∫—Ä–∞–π: true/false';

-- ===== 5. –î–û–ë–ê–í–õ–ï–ù–ò–ï FK –°–í–Ø–ó–ò –î–õ–Ø BOTTOM_TYPE =====

-- –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á –¥–ª—è bottom_type_id
ALTER TABLE products 
ADD CONSTRAINT fk_products_bottom_type 
FOREIGN KEY (bottom_type_id) REFERENCES bottom_types(id);

-- ===== 6. –ò–ù–î–ï–ö–°–´ –î–õ–Ø –ë–´–°–¢–†–û–ô –§–ò–õ–¨–¢–†–ê–¶–ò–ò =====

-- –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_products_height_mm ON products(height_mm);
CREATE INDEX IF NOT EXISTS idx_products_bottom_type_id ON products(bottom_type_id);
CREATE INDEX IF NOT EXISTS idx_product_edges_product_id ON product_edges(product_id);
CREATE INDEX IF NOT EXISTS idx_product_edges_edge_type ON product_edges(edge_type);
CREATE INDEX IF NOT EXISTS idx_product_edges_side_type ON product_edges(side, edge_type);
CREATE INDEX IF NOT EXISTS idx_product_edges_reinforced ON product_edges(reinforced);

-- –°–æ—Å—Ç–∞–≤–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
CREATE INDEX IF NOT EXISTS idx_products_dimensions_filter ON products(length_mm, width_mm, height_mm);
CREATE INDEX IF NOT EXISTS idx_product_edges_puzzle_filter ON product_edges(product_id, edge_type, puzzle_type_id) WHERE edge_type = 'puzzle';

-- ===== 7. –ë–≠–ö–§–ò–õ–õ –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –î–ê–ù–ù–´–• =====

-- –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ thickness –≤ height_mm
UPDATE products 
SET height_mm = (dimensions->>'thickness')::INTEGER 
WHERE dimensions->>'thickness' IS NOT NULL 
  AND height_mm IS NULL;

-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è height_mm
UPDATE products 
SET height_mm = 0 
WHERE height_mm IS NULL;

-- –î–µ–ª–∞–µ–º height_mm NOT NULL –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
ALTER TABLE products ALTER COLUMN height_mm SET NOT NULL;
ALTER TABLE products ALTER COLUMN height_mm SET DEFAULT 0;

-- –ë—ç–∫—Ñ–∏–ª–ª –∫—Ä–∞—ë–≤ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
-- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∫—Ä–∞—è = straight, –Ω–µ —É—Å–∏–ª–µ–Ω–Ω—ã–µ
INSERT INTO product_edges (product_id, side, edge_type, reinforced)
SELECT 
    p.id,
    unnest(ARRAY['top', 'bottom', 'left', 'right']::edge_side[]) as side,
    'straight'::edge_type as edge_type,
    false as reinforced
FROM products p
ON CONFLICT (product_id, side) DO NOTHING;

-- ===== 8. –ü–ï–†–ï–ù–ï–°–ï–ù–ò–ï –ü–ê–ó–ó–õ–û–í –ò–ó PIZZLE_OPTIONS =====

-- –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å puzzleOptions –∏ surface = "–ü–∞–∑–∑–ª", –ø–µ—Ä–µ–Ω–æ—Å–∏–º –≤ –∫—Ä–∞—è
UPDATE product_edges pe
SET 
    edge_type = 'puzzle',
    puzzle_type_id = (
        SELECT pt.id FROM puzzle_types pt 
        WHERE pt.code = p.puzzle_options->>'type'
    )
FROM products p
WHERE pe.product_id = p.id 
    AND p.surface_id = (SELECT id FROM product_surfaces WHERE name = '–ü–∞–∑–∑–ª')
    AND p.puzzle_options->>'enabled' = 'true'
    AND pe.side IN (
        CASE 
            WHEN p.puzzle_options->>'sides' = '1_side' THEN 'top'
            WHEN p.puzzle_options->>'sides' = '2_sides' THEN 'top'
            WHEN p.puzzle_options->>'sides' = '3_sides' THEN 'top'
            WHEN p.puzzle_options->>'sides' = '4_sides' THEN 'top'
            ELSE 'top'
        END
    );

-- ===== 9. –î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í =====

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –Ω–æ–≤—ã–º –ø–æ–ª—è–º products
COMMENT ON COLUMN products.height_mm IS '–í—ã—Å–æ—Ç–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∏–ª–ª–∏–º–µ—Ç—Ä–∞—Ö (–∑–∞–º–µ–Ω—è–µ—Ç thickness)';
COMMENT ON COLUMN products.bottom_type_id IS 'ID —Ç–∏–ø–∞ –Ω–∏–∂–Ω–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ (—à–∏–ø—ã)';

-- ===== 10. –õ–û–ì–ò–†–û–í–ê–ù–ò–ï =====

-- –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
INSERT INTO audit_log (table_name, record_id, operation, old_values, new_values, user_id, created_at)
VALUES (
    'SYSTEM', 
    0, 
    'MIGRATION', 
    '{}', 
    '{"migration": "add_edges_v2_model", "status": "completed", "tables": ["bottom_types", "product_edges"], "fields": ["height_mm", "bottom_type_id"]}',
    1, 
    NOW()
);

COMMIT;

-- ===== 11. –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø =====

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
SELECT '=== –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –ú–ò–ì–†–ê–¶–ò–ò ===' as status;

SELECT 'bottom_types' as table_name, COUNT(*) as rows_count FROM bottom_types
UNION ALL
SELECT 'product_edges', COUNT(*) FROM product_edges
UNION ALL
SELECT 'products with height_mm', COUNT(*) FROM products WHERE height_mm IS NOT NULL;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
SELECT '=== –ü–†–û–í–ï–†–ö–ê –ò–ù–î–ï–ö–°–û–í ===' as status;
SELECT indexname, tablename FROM pg_indexes 
WHERE tablename IN ('products', 'product_edges', 'bottom_types')
ORDER BY tablename, indexname;

SELECT 'üéâ –ú–ò–ì–†–ê–¶–ò–Ø add_edges_v2_model –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!' as final_status;



