#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞–º–∏
 */

const { config } = require('dotenv');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.join(__dirname, '.env') });

const { validateAllStock, fixStockInconsistencies, syncReservationsWithOrders, getStockStatistics } = require('./dist/utils/stockManager');

async function main() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞–º–∏...\n');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤...');
    const stats = await getStockStatistics();
    
    console.log(`üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${stats.total}`);
    console.log(`‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏: ${stats.normal}`);
    console.log(`‚ö†Ô∏è  –ù–∏–∑–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏: ${stats.low}`);
    console.log(`‚ùå –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏: ${stats.critical}`);
    console.log(`üî¥ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏: ${stats.negative}`);
    console.log(`‚ö° –î–∞–Ω–Ω—ã–µ —Å –æ—à–∏–±–∫–∞–º–∏: ${stats.invalidData}\n`);

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...');
    const validation = await validateAllStock();
    
    console.log(`‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${validation.valid}`);
    console.log(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${validation.invalid.length}\n`);

    if (validation.invalid.length > 0) {
      console.log('üö® –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:');
      validation.invalid.forEach((item, index) => {
        console.log(`${index + 1}. –¢–æ–≤–∞—Ä ID ${item.productId}:`);
        console.log(`   –û—Å—Ç–∞—Ç–æ–∫: ${item.currentStock}, –†–µ–∑–µ—Ä–≤: ${item.reservedStock}, –î–æ—Å—Ç—É–ø–Ω–æ: ${item.availableStock}`);
        console.log(`   –û—à–∏–±–∫–∏: ${item.errors?.join(', ')}`);
      });
      console.log();

      // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
      const readline = require('readline');
      const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
      });

      const shouldFix = await new Promise((resolve) => {
        rl.question('üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã? (y/N): ', (answer) => {
          resolve(answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes');
        });
      });

      if (shouldFix) {
        console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º...');
        
        // –§–∏–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (ID=1 - –æ–±—ã—á–Ω–æ admin)
        const systemUserId = 1;
        
        const fixResult = await fixStockInconsistencies(systemUserId);
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${fixResult.fixed}`);
        
        if (fixResult.errors.length > 0) {
          console.log('‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:');
          fixResult.errors.forEach(error => console.log(`   ${error}`));
        }
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑–µ—Ä–≤—ã —Å –∑–∞–∫–∞–∑–∞–º–∏
        console.log('\nüîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–æ–≤ —Å –∑–∞–∫–∞–∑–∞–º–∏...');
        const syncResult = await syncReservationsWithOrders(systemUserId);
        console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${syncResult.synced}`);
        
        if (syncResult.errors.length > 0) {
          console.log('‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:');
          syncResult.errors.forEach(error => console.log(`   ${error}`));
        }

        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        console.log('\nüîç –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
        const newValidation = await validateAllStock();
        console.log(`‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${newValidation.valid}`);
        console.log(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${newValidation.invalid.length}`);
        
        if (newValidation.invalid.length === 0) {
          console.log('üéâ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
        } else {
          console.log('‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞:');
          newValidation.invalid.forEach((item, index) => {
            console.log(`${index + 1}. –¢–æ–≤–∞—Ä ID ${item.productId}: ${item.errors?.join(', ')}`);
          });
        }
      }

      rl.close();
    } else {
      console.log('üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!');
    }

    // 3. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    const finalStats = await getStockStatistics();
    console.log(`üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${finalStats.total}`);
    console.log(`‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏: ${finalStats.normal}`);
    console.log(`‚ö†Ô∏è  –ù–∏–∑–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏: ${finalStats.low}`);
    console.log(`‚ùå –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏: ${finalStats.critical}`);
    console.log(`üî¥ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏: ${finalStats.negative}`);
    console.log(`‚ö° –î–∞–Ω–Ω—ã–µ —Å –æ—à–∏–±–∫–∞–º–∏: ${finalStats.invalidData}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ:', error.message);
    process.exit(1);
  }

  console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
} 