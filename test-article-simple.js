const axios = require('axios');

const API_BASE_URL = 'http://localhost:5001/api';

async function testArticleConsistency() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—Ä—Ç–∏–∫—É–ª–æ–≤...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤...');
    const productsResponse = await axios.get(`${API_BASE_URL}/catalog/products?page=1&limit=5`, {
      headers: {
        'Authorization': 'Bearer YOUR_TOKEN_HERE', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        'Content-Type': 'application/json'
      }
    });

    if (!productsResponse.data.success) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: ${productsResponse.data.error}`);
    }

    const products = productsResponse.data.data.products;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}`);

    if (products.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    for (let i = 0; i < Math.min(3, products.length); i++) {
      const product = products[i];
      console.log(`\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä #${i + 1}: "${product.name}"`);
      console.log(`   –¢–µ–∫—É—â–∏–π –∞—Ä—Ç–∏–∫—É–ª: ${product.article || '–ù–ï–¢'}`);

      try {
        // –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—Ä—Ç–∏–∫—É–ª
        const regenerateResponse = await axios.post(`${API_BASE_URL}/catalog/regenerate/dry-run`, {
          productIds: [product.id]
        }, {
          headers: {
            'Authorization': 'Bearer YOUR_TOKEN_HERE',
            'Content-Type': 'application/json'
          }
        });

        if (regenerateResponse.data.success) {
          const result = regenerateResponse.data.data.results[0];
          console.log(`   –ù–æ–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª: ${result.newSku || '–ù–ï –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù'}`);
          console.log(`   –°—Ç–∞—Ç—É—Å: ${result.canApply ? '‚úÖ –ú–û–ñ–ù–û –ü–†–ò–ú–ï–ù–ò–¢–¨' : '‚ùå –û–®–ò–ë–ö–ê'}`);
          
          if (!result.canApply && result.details) {
            console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${result.details.join(', ')}`);
          }
        } else {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${regenerateResponse.data.error}`);
        }
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testArticleConsistency();
